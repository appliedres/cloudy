// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AvdPersonal Represents a distributed lock for AVD stack operations.
//
// swagger:model AvdPersonal
type AvdPersonal struct {

	// Unique key for the lock (e.g., "avdManagerName:VMID")
	ID string `json:"ID,omitempty"`

	// Timestamp when the lock was acquired
	// Format: date-time
	AcquiredAt strfmt.DateTime `json:"acquiredAt,omitempty"`
}

// Validate validates this avd personal
func (m *AvdPersonal) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAcquiredAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AvdPersonal) validateAcquiredAt(formats strfmt.Registry) error {
	if swag.IsZero(m.AcquiredAt) { // not required
		return nil
	}

	if err := validate.FormatOf("acquiredAt", "body", "date-time", m.AcquiredAt.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this avd personal based on context it is used
func (m *AvdPersonal) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AvdPersonal) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AvdPersonal) UnmarshalBinary(b []byte) error {
	var res AvdPersonal
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
