// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AvdHostPool avd host pool
//
// swagger:model AvdHostPool
type AvdHostPool struct {

	// Host pool name or resource ID
	ID string `json:"id,omitempty"`

	// last sync
	// Format: date-time
	LastSync strfmt.DateTime `json:"lastSync,omitempty"`

	// location
	Location string `json:"location,omitempty"`

	// metadata
	Metadata map[string]string `json:"metadata,omitempty"`

	// resource group
	ResourceGroup string `json:"resourceGroup,omitempty"`

	// List of linked session host IDs
	SessionHostIDs []string `json:"sessionHostIDs"`

	// e.g., "Active", "Deleting"
	Status string `json:"status,omitempty"`
}

// Validate validates this avd host pool
func (m *AvdHostPool) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLastSync(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AvdHostPool) validateLastSync(formats strfmt.Registry) error {
	if swag.IsZero(m.LastSync) { // not required
		return nil
	}

	if err := validate.FormatOf("lastSync", "body", "date-time", m.LastSync.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this avd host pool based on context it is used
func (m *AvdHostPool) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AvdHostPool) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AvdHostPool) UnmarshalBinary(b []byte) error {
	var res AvdHostPool
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
