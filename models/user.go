// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// User user
//
// swagger:model User
type User struct {

	// account type
	AccountType string `json:"AccountType,omitempty"`

	// action log
	ActionLog string `json:"ActionLog,omitempty"`

	// citizenship
	Citizenship string `json:"Citizenship,omitempty"`

	// company
	Company string `json:"Company,omitempty"`

	// contract date
	ContractDate string `json:"ContractDate,omitempty"`

	// contract number
	ContractNumber string `json:"ContractNumber,omitempty"`

	// department
	Department string `json:"Department,omitempty"`

	// display name
	DisplayName string `json:"DisplayName,omitempty"`

	// email
	Email string `json:"Email,omitempty"`

	// enabled
	Enabled bool `json:"Enabled,omitempty"`

	// first name
	FirstName string `json:"FirstName,omitempty"`

	// git lab onboarding issue
	GitLabOnboardingIssue int64 `json:"GitLabOnboardingIssue,omitempty"`

	// ID
	ID string `json:"ID,omitempty"`

	// job title
	JobTitle string `json:"JobTitle,omitempty"`

	// justification
	Justification string `json:"Justification,omitempty"`

	// last name
	LastName string `json:"LastName,omitempty"`

	// last sign in date
	// Format: datetime
	LastSignInDate strfmt.DateTime `json:"LastSignInDate,omitempty"`

	// mobile phone
	MobilePhone string `json:"MobilePhone,omitempty"`

	// must change password
	MustChangePassword bool `json:"MustChangePassword,omitempty"`

	// office phone
	OfficePhone string `json:"OfficePhone,omitempty"`

	// password
	Password string `json:"Password,omitempty"`

	// program role
	ProgramRole string `json:"ProgramRole,omitempty"`

	// sponsor
	Sponsor string `json:"Sponsor,omitempty"`

	// status
	Status string `json:"Status,omitempty"`

	// status reason
	StatusReason string `json:"StatusReason,omitempty"`

	// u p n
	UPN string `json:"UPN,omitempty"`
}

// Validate validates this user
func (m *User) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLastSignInDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *User) validateLastSignInDate(formats strfmt.Registry) error {
	if swag.IsZero(m.LastSignInDate) { // not required
		return nil
	}

	if err := validate.FormatOf("LastSignInDate", "body", "datetime", m.LastSignInDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this user based on context it is used
func (m *User) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *User) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *User) UnmarshalBinary(b []byte) error {
	var res User
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
